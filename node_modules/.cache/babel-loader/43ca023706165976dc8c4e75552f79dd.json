{"ast":null,"code":"import _slicedToArray from \"/home/dev/Documentos/UdemyReact/adivina/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/dev/Documentos/UdemyReact/adivina/src/components/tablero/tablero.js\";\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport Carta from \"../carta/carta\";\nimport \"./tablero.scss\";\n\nconst Tablero = ({\n  cartas,\n  guardarCartas\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        adivinarCartas = _useState2[0],\n        guardarAdivinarCartas = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        listaAdivinadas = _useState4[0],\n        guardarListaAdivinadas = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        evaluandoCartas = _useState6[0],\n        guardarEvaluandoCartas = _useState6[1];\n\n  useEffect(() => {\n    if (!evaluandoCartas && adivinarCartas.length === 1) {\n      cambiarEstadoCarta();\n    }\n\n    if (adivinarCartas.length === 2) {\n      setTimeout(() => {\n        validarCartas(adivinarCartas);\n        guardarAdivinarCartas([]);\n        guardarEvaluandoCartas(false);\n        guardarJugador1Activo(!jugador1Activo);\n      }, 200);\n    }\n  });\n\n  const cambiarEstadoCarta = () => {\n    const newCartas = cartas.map(carta => {\n      if (adivinarCartas[0].id === carta.id) {\n        carta.estado = true;\n      }\n\n      return carta;\n    });\n    guardarEvaluandoCartas(true);\n    guardarCartas(newCartas);\n  };\n\n  const validarCartas = compararCartas => {\n    let newCartas = [];\n    let adivinada = false;\n    let comparar = false;\n    compararCartas.map(carta => {\n      if (listaAdivinadas.indexOf(carta.carta) === -1) {\n        comparar = true;\n      }\n    });\n\n    if (comparar) {\n      if (compararCartas[0].carta === compararCartas[1].carta) {\n        newCartas = cartas.map(carta => {\n          if (carta.carta === compararCartas[0].carta) {\n            carta.adivinada = true;\n            adivinada = true;\n          }\n\n          return carta;\n        });\n      } else {\n        newCartas = cartas.map(carta => {\n          if (compararCartas[0].id === carta.id || compararCartas[1].id === carta.id) {\n            carta.estado = false;\n          }\n\n          return carta;\n        });\n      }\n\n      if (adivinada) {\n        let newJugadoresPuntos = listjugadores;\n\n        if (jugador1Activo) {\n          newJugadoresPuntos[0].puntos++;\n          guardarlistjugadores(newJugadoresPuntos);\n        } else {\n          newJugadoresPuntos[1].puntos++;\n          guardarlistjugadores(newJugadoresPuntos);\n        }\n\n        guardarListaAdivinadas(compararCartas[0].carta);\n      }\n\n      guardarCartas(newCartas);\n    }\n  };\n\n  let verCartas = cartas.map(baraja => {\n    return React.createElement(Carta, {\n      key: baraja.id,\n      baraja: baraja,\n      adivinarCartas: adivinarCartas,\n      guardarAdivinarCartas: guardarAdivinarCartas,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    });\n  });\n  return cartas.length > 0 ? React.createElement(\"div\", {\n    className: \"tablero\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, verCartas)) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Presionar REPARTIR para iniciar Partida\"));\n};\n\nexport default Tablero;","map":{"version":3,"sources":["/home/dev/Documentos/UdemyReact/adivina/src/components/tablero/tablero.js"],"names":["React","useState","useEffect","Fragment","Carta","Tablero","cartas","guardarCartas","adivinarCartas","guardarAdivinarCartas","listaAdivinadas","guardarListaAdivinadas","evaluandoCartas","guardarEvaluandoCartas","length","cambiarEstadoCarta","setTimeout","validarCartas","guardarJugador1Activo","jugador1Activo","newCartas","map","carta","id","estado","compararCartas","adivinada","comparar","indexOf","newJugadoresPuntos","listjugadores","puntos","guardarlistjugadores","verCartas","baraja"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport Carta from \"../carta/carta\";\nimport \"./tablero.scss\";\n\n\nconst Tablero = ({\n  cartas,\n  guardarCartas\n}) => {\n  const [adivinarCartas, guardarAdivinarCartas] = useState([]);\n  const [listaAdivinadas, guardarListaAdivinadas] = useState([]);\n  const [evaluandoCartas, guardarEvaluandoCartas] = useState(false);\n\n  useEffect(() => {\n    if (!evaluandoCartas && adivinarCartas.length === 1) {\n      cambiarEstadoCarta();\n    }\n\n    if (adivinarCartas.length === 2) {\n      setTimeout(() => {\n        validarCartas(adivinarCartas);\n        guardarAdivinarCartas([]);\n        guardarEvaluandoCartas(false);\n        guardarJugador1Activo(!jugador1Activo);\n      }, 200);\n    }\n  });\n\n  const cambiarEstadoCarta = () => {\n    const newCartas = cartas.map(carta => {\n      if (adivinarCartas[0].id === carta.id) {\n        carta.estado = true;\n      }\n      return carta;\n    });\n    guardarEvaluandoCartas(true);\n    guardarCartas(newCartas);\n  };\n\n  const validarCartas = compararCartas => {\n    let newCartas = [];\n    let adivinada = false;\n    let comparar = false;\n    compararCartas.map(carta => {\n      if (listaAdivinadas.indexOf(carta.carta) === -1) {\n        comparar = true;\n      }\n    });\n    if (comparar) {\n      if (compararCartas[0].carta === compararCartas[1].carta) {\n        newCartas = cartas.map(carta => {\n          if (carta.carta === compararCartas[0].carta) {\n            carta.adivinada = true;\n            adivinada = true;\n          }\n          return carta;\n        });\n      } else {\n        newCartas = cartas.map(carta => {\n          if (\n            compararCartas[0].id === carta.id ||\n            compararCartas[1].id === carta.id\n          ) {\n            carta.estado = false;\n          }\n          return carta;\n        });\n      }\n      if (adivinada) {\n        let newJugadoresPuntos = listjugadores;\n        if (jugador1Activo) {\n          newJugadoresPuntos[0].puntos++;\n          guardarlistjugadores(newJugadoresPuntos);\n        } else {\n          newJugadoresPuntos[1].puntos++;\n          guardarlistjugadores(newJugadoresPuntos);\n        }\n        guardarListaAdivinadas(compararCartas[0].carta);\n      }\n      guardarCartas(newCartas);\n    }\n  };\n\n  let verCartas = cartas.map(baraja => {\n    return (\n      <Carta\n        key={baraja.id}\n        baraja={baraja}\n        adivinarCartas={adivinarCartas}\n        guardarAdivinarCartas={guardarAdivinarCartas}\n      />\n    );\n  });\n\n  return cartas.length > 0 ? (\n    <div className=\"tablero\">\n      <Fragment>{verCartas}</Fragment>\n    </div>\n  ) : (\n    <div>\n      <h3>Presionar REPARTIR para iniciar Partida</h3>\n    </div>\n  );\n};\n\nexport default Tablero;\n"]},"metadata":{},"sourceType":"module"}